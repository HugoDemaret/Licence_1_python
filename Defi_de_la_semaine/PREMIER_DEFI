
Ce premier sujet est une sorte de test, il me permettra d'évaluer le niveau global et d'ajuster en fonction pour les prochains défis!

Ce premier défi s'étale sur environ 2 semaines, et se terminera donc le vendredi 30 octobre à minuit (GMT+2)
Aussi, je vous demande de lire les règles avant de commencer, afin de vous éviter une perte de temps!

Voici donc le sujet:

En générant des nombres aléatoires entre -1 et 1, (fonction de randomisation), créer un algorithme, puis le coder en python, permettant de faire "apparaître" PI.
Vous ne devez utiliser que de l'aléatoire: vous ne devez donc pas définir de variable approximativement égale à PI (ou d'algorithme non aléatoire). Votre algorithme doit prendre en entrée un entier N, correspondant au nombre d'itération de l'algorithme. Plus N est grand, plus le nombre d'itération sera grand, et plus l'approximation de pi sera précise. Ainsi, s'il était possible de faire tourner votre algorithme avec un nombre infini d'itération, vous obtiendrez la valeur exact de PI! 

Pour ce sujet la complexité algorithmique ne sera pas prise en compte, pour une raison assez évidente: un algorithme aléatoire n'est en général pas très efficace. Dans ce premier défi, il s'agira plutôt de montrer votre créativité, de trouver une solution "élégante" au problème!

Une correction sera proposée après la date butoire. Toutefois, si un sujet est jugé "mieux" que la correction prévu, celui-ci sera affiché!

La solution du gagnant du concours figurera, ainsi que son nom, dans les annales des défis (sauf en cas de refus de la part du gagnant biensur).

Merci d'envoyer vos réponses à hugodemaret@defi-lovelace.fr (avant la date butoire) avec l'objet suivant: DefiHebdo_Date_NomPrenom


Voici quelques indices: probabilitées, jeu de fléchettes, polynômes

Enfin, le plus important est de participer, et non pas de gagner!
Je vous souhaite donc bonne chance!


#Hugo Demaret


 Grille de correction:                                                                                                        
                                                                                                                              
 Rapidité d'exécution: 0 points (pas prise en compte dans ce défi)                                                            
 Originalité (élégance): 7 points                                                                                             
 Qualitée du code: 5 points                                                                                                   
 Qualitée des commentaires: 3 points                                                                                          
 Respect des consignes: 5 points (attention, un non respect total des consignes entraine l'élimination d'office)              
 Le total est une note sur 20 points.                                                                                         

